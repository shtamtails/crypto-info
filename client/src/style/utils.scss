@use "./colors" as *;

$baseSpacingUnit: 8;
$spacingScales: (
  xs: 0.25,
  sm: 0.5,
  md: 1,
  lg: 1.5,
  xl: 2,
);

@function calculate-spacing($multiplier, $base-unit: $baseSpacingUnit) {
  $result: $multiplier * $base-unit;
  @return #{$result}px;
}

@each $prop in (padding, margin, border-radius) {
  @each $dir in (top, right, bottom, left) {
    @each $scale, $multiplier in $spacingScales {
      .#{$prop}-#{$dir}-#{$scale} {
        #{$prop}-#{$dir}: calculate-spacing($multiplier);
      }
    }
  }
}

@each $prop in (border-radius) {
  @each $scale, $multiplier in $spacingScales {
    .#{$prop}-#{$scale} {
      #{$prop}: calculate-spacing($multiplier);
    }
  }
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.flex {
  display: flex;
}

.flex-col {
  display: flex;
  flex-direction: column;
}

.aic {
  align-items: center;
}

.ais {
  align-items: start;
}

.aie {
  align-items: end;
}

.jcc {
  justify-content: center;
}

.color-positive {
  color: $text-positive;
}

.color-negative {
  color: $text-negative;
}

.fullWidth {
  width: 100%;
}
